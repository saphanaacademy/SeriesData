SELECT * FROM SERIES_DATA.MACHINE_READINGS;
SELECT * FROM SERIES_DATA.MACHINE_TEMPERATURE;

-- horizontal aggregation, using series_round & round_down, minute to hour

SELECT 
	SENSOR, 
	SERIES_ROUND(TIMER, 'INTERVAL 1 HOUR', ROUND_DOWN) AS TIMER_HOUR, 
	AVG(READING) AS READING_AVG_HOUR
FROM SERIES_DATA.MACHINE_READINGS
GROUP BY SENSOR, SERIES_ROUND(TIMER, 'INTERVAL 1 HOUR', ROUND_DOWN);

	-- or

WITH MRH AS (
	SELECT SENSOR, 
	SERIES_ROUND(TIMER, 'INTERVAL 1 HOUR', ROUND_DOWN) AS TIMER_HOUR, 
	READING 
	FROM SERIES_DATA.MACHINE_READINGS
)
SELECT SENSOR, TIMER_HOUR, AVG(READING) AS READING_AVG_HOUR 
FROM MRH
GROUP BY SENSOR, TIMER_HOUR;

-- vertical aggregation between readings & temperature tables

-- syntax at the same granularity usually something like
	/*
	SELECT 
		T1.TIMER, 
		AVG(T1.READING), 
		AVG(T2.READING),
	FROM YOURSCHEMA.TABLE1 T1
	JOIN YOURSCHEMA.TABLE2 T2
	ON T1.SENSOR = T2.SENSOR
		AND T1.TIMER = T2.TIMER
	GROUP BY T1.TIMER;
	*/

-- after horizontal aggregation of machine readings

SELECT 
	MT.SENSOR, 
	MT.TIMER,
	( 
		SELECT AVG(MR.READING)	
		FROM SERIES_DATA.MACHINE_READINGS MR
		WHERE MR.SENSOR = MT.SENSOR AND
			SERIES_ROUND(MR.TIMER, 'INTERVAL 1 HOUR', ROUND_DOWN) = MT.TIMER
	) AS READING_AVG_HOUR,
	MT.TEMPERATURE
FROM 
	SERIES_DATA.MACHINE_TEMPERATURE MT;

	-- or

WITH MRH AS (
	SELECT SENSOR, 
	SERIES_ROUND(TIMER, 'INTERVAL 1 HOUR', ROUND_DOWN) AS TIMER_HOUR, 
	READING 
	FROM SERIES_DATA.MACHINE_READINGS
)
SELECT 
	MRH.SENSOR, 
	MRH.TIMER_HOUR, 
	AVG(MRH.READING) AS READING_AVG_HOUR,
	MAX(MT.TEMPERATURE) AS TEMPERATURE
FROM MRH, SERIES_DATA.MACHINE_TEMPERATURE MT
WHERE MRH.SENSOR = MRH.SENSOR
	AND MRH.TIMER_HOUR = MT.TIMER
GROUP BY MRH.SENSOR, MRH.TIMER_HOUR;
